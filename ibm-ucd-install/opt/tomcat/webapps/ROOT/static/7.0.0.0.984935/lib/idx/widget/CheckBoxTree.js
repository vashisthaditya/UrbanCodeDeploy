//>>built
define("idx/widget/CheckBoxTree","dojo/_base/declare,dojo/_base/array,dojo/_base/lang,dijit/Tree,dijit/_WidgetsInTemplateMixin,idx/form/TriStateCheckBox,./checkboxtree/_dndSelector,./_CheckBoxTreeNode".split(","),function(f,e,d,h,k,l,i,j){return d.getObject("idx.oneui",!0).CheckBoxTree=f("idx.widget.CheckBoxTree",[h],{baseClass:"idxCheckBoxTree",dndController:i,openOnClick:!1,_itemStatus:null,postMixInProperties:function(){this.inherited(arguments);this._itemStatus={}},_createTreeNode:function(a){return new j(a)},
toggleNode:function(a,b){if(d.isString(a))var c=this.getNodesByItem(a),a=c&&c[0]?c[0]:void 0;a&&(void 0==b&&(b=!a.checkboxNode.get("checked")),0<=e.indexOf(a.checkboxNode.states,b)&&a.updateState(b))},_onNodeStateChange:function(a,b){this.onNodeStateChange(a,b)},onNodeStateChange:function(){},_onEnterKey:function(a){this._publish("execute",{item:a.item,node:a.node});this.dndController.userSelect(a.node,!0,!1);this.onClick(a.item,a.node,a.evt)},_onItemChildrenChange:function(a,b){var c=this._itemNodesMap[this.model.getIdentity(a)];
c&&e.forEach(c,function(a){a.setChildItems(b);a.update();a.updateParent()})},_expandNode:function(a,b){if(a._expandNodeDeferred&&!b)return a._expandNodeDeferred;var c=this.model,e=a.item,d=this;switch(a.state){case "UNCHECKED":a.markProcessing();var g=a._expandNodeDeferred=new dojo.Deferred,f=a.checkboxNode.get("checked");c.getChildren(e,function(b){a.unmarkProcessing();b=a.setChildItems(b);b.addCallback(function(){a.updateState(f)});var c=d._expandNode(a,!0);b.addCallback(function(){c.addCallback(function(){g.callback()})})},
function(a){console.error(d,": error loading root children: ",a)});break;default:g=a._expandNodeDeferred=a.expand(),this.onOpen(a.item,a),this._state(a,!0)}return g},_onEnterKey:function(a){a.node.checkboxNode.click();var b=a.node.checkboxNode.get("checked");a.node.updateState(b)},getSelectedItems:function(){var a=[],b;for(b in this._itemStatus)!0===this._itemStatus[b]&&a.push(b);return a}})});