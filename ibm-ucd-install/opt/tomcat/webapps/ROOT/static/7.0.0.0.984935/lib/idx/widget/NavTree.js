//>>built
require({cache:{"url:idx/widget/templates/NavTree.html":'<div class="dijitTree ${idxBaseClass} dijitTreeContainer" role="tree"\r\n\tdata-dojo-attach-event="onkeypress:_onKeyPress">\r\n\t<div class="dijitInline dijitTreeIndent" style="position: absolute; top: -9999px" \r\n\t\t data-dojo-attach-point="indentDetector"></div>\r\n</div>\r\n',"url:idx/widget/templates/NavTreeNode.html":'<div class="dijitTreeNode" role="presentation"\r\n\t><div data-dojo-attach-point="rowNode" class="dijitTreeRow dijitInline" role="presentation"\r\n\t\t><div data-dojo-attach-point="indentNode" class="dijitInline"></div\r\n\t\t><img src="${_blankGif}" alt="" data-dojo-attach-point="expandoNode" class="dijitTreeExpando" role="presentation"\r\n\t\t/><span data-dojo-attach-point="expandoNodeText" class="dijitExpandoText" role="presentation"\r\n\t\t></span\r\n\t\t><span data-dojo-attach-point="contentNode"\r\n\t\t\tclass="dijitTreeContent" role="presentation">\r\n\t\t\t<span role="presentation" data-dojo-attach-point="selectMarkerNode" class="${idxBaseClass}SelectMarker"\r\n\t\t\t></span><img src="${_blankGif}" alt="" data-dojo-attach-point="iconNode" class="dijitIcon dijitTreeIcon" role="presentation"\r\n\t\t\t/><span data-dojo-attach-point="labelNode" class="dijitTreeLabel" role="treeitem" tabindex="-1" aria-selected="false"></span\r\n\t\t\t><span data-dojo-attach-point="badgeNode" class="${idxBaseClass}Badge" id="${id}_badge">\r\n\t\t    \t<img src="${_blankGif}" alt="" data-dojo-attach-point="badgeIconNode" \r\n\t\t\t\t\t  class="dijitIcon ${idxBaseClass}BadgeIcon" role="presentation"\r\n\t\t \t\t/><span data-dojo-attach-point="badgeLabelNode" class="${idxBaseClass}BadgeLabel"></span>\r\n\t\t   </span\r\n\t\t></span\r\n\t></div>\r\n\t<div data-dojo-attach-point="containerNode" class="dijitTreeContainer" role="presentation" style="display: none;"></div>\r\n</div>\r\n'}});
define("idx/widget/NavTree","dojo/_base/declare,dojo/_base/kernel,dojo/_base/lang,dojo/aspect,dojo/dom-class,dijit/Tree,../util,../resources,../string,./NavTreeModel,dojo/text!./templates/NavTree.html,dojo/text!./templates/NavTreeNode.html,dojo/i18n!../nls/base,dojo/i18n!./nls/base,dojo/i18n!./nls/NavTree".split(","),function(f,m,g,k,e,i,h,n,j,o,p,q){var r=i._TreeNode?i._TreeNode:g.getObject("dijit._TreeNode"),l=f("idx.widget._NavTreeNode",[r],{baseClass:"dijitTreeNode",idxBaseClass:"idxNavTreeNode",
templateString:q,badgeLabel:"",_setBadgeLabelAttr:function(a){this.badgeLabel=a;this.badgeLabelNode.innerHTML=a?a:"";j.nullTrim(this.badgeLabel)?e.remove(this.badgeNode,this.idxBaseClass+"NoBadgeLabel"):e.add(this.badgeNode,this.idxBaseClass+"NoBadgeLabel")},_updateItemClasses:function(a){this.inherited(arguments);var b=this._badgeIconClass;this._badgeIconClass=this.tree.getBadgeIconClass(a,this.isExpanded);j.nullTrim(b)&&(e.remove(this.badgeIconNode,b),e.add(this.badgeNode,this.idxBaseClass+"NoBadgeIcon"));
j.nullTrim(this._badgeIconClass)?(e.remove(this.badgeNode,this.idxBaseClass+"NoBadgeIcon"),e.add(this.badgeIconNode,this._badgeIconClass)):e.add(this.badgeNode,this.idxBaseClass+"NoBadgeIcon")}}),f=f("idx.widget.NavTree",[i],{baseClass:"dijitTree",idxBaseClass:"idxNavTree",showRoot:!1,templateString:p,showIcons:!1,_setShowIconsAttr:function(a){this.showIcons=a;this._updateShowIconsClass()},showBadges:!0,_setShowBadgesAttr:function(a){this.showBadges=a;this._updateShowBadgesClass()},iconMap:null,_setIconMapAttr:function(a){this.iconMap=
a;if(this._itemNodesMap)for(var b in this._itemNodesMap)if(a=this._itemNodesMap[b])for(var d=0;d<a.length;d++){var c=a[d];c._updateItemClasses(c.item)}},badgeIconMap:null,_setBadgeIconMapAttr:function(a){this.badgeIconMap=a;if(this._itemNodesMap)for(var b in this._itemNodesMap)if(a=this._itemNodesMap[b])for(var d=0;d<a.length;d++){var c=a[d];c._updateItemClasses(c.item)}},highlightSelection:!0,_setHighlightSelectionAttr:function(a){this.highlightSelection=a;this._updateHighlightSelectionClass()},
lookupItemLabels:!0,_setLookupItemLabelsAttr:function(a){var b=this.lookupItemLabels;this.lookupItemLabels=a;if(this._started&&b!=a)for(var d in this._itemNodesMap)if(a=this._itemNodesMap[d])for(b=0;b<a.length;b++){var c=a[b],e=this.getLabel(c.get("item"));c.set("label",e)}},lookupBadgeLabels:!0,_setLookupBadgeLabelsAttr:function(a){var b=this.lookupBadgeLabels;this.lookupBadgeLabels=a;if(this._started&&b!=a)for(var d in this._itemNodesMap)if(a=this._itemNodesMap[d])for(b=0;b<a.length;b++){var c=
a[b],e=this.getBadgeLabel(c.get("item"));c.set("badgeLabel",e)}},itemLabelKeyPrefix:"",itemLabelKeySuffix:"",badgeLabelKeyPrefix:"",badgeLabelKeySuffix:"",resources:null,_updateHighlightSelectionClass:function(){this.highlightSelection?e.remove(this.domNode,this.idxBaseClass+"NoHighlight"):e.add(this.domNode,this.idxBaseClass+"NoHighlight")},_updateShowIconsClass:function(){this.showIcons?e.remove(this.domNode,this.idxBaseClass+"HideIcons"):e.add(this.domNode,this.idxBaseClass+"HideIcons")},_updateShowBadgesClass:function(){this.showBadges?
e.remove(this.domNode,this.idxBaseClass+"HideBadges"):e.add(this.domNode,this.idxBaseClass+"HideBadges")},_updateTopLevelClasses:function(){this._updateShowIconsClass();this._updateShowBadgesClass();this._updateHighlightSelectionClass()},buildRendering:function(){this.inherited(arguments);this._updateTopLevelClasses()},postCreate:function(){this.inherited(arguments);var a=this;this.dndController.singular=!0;this.dndController._baseUserSelect=this.dndController.userSelect;this.dndController.userSelect=
function(b,d,c){return!a.model.isSelectable(b.item)?void 0:this._baseUserSelect(b,d,c)};this.dndController._baseSetSelection=this.dndController.setSelection;this.dndController.setSelection=function(b){if(!(1<b.length||1==b.length&&!a.model.isSelectable(b[0].item)))return this._baseSetSelection(b)};this.own(k.after(this.model,"onBadgesChanged",g.hitch(this,"_onBadgesChanged"),!0));this.own(k.after(this.model,"onSelectabilityChanged",g.hitch(this,"_onSelectabilityChanged"),!0))},postMixInProperties:function(){h.nullify(this,
this.params,["itemLabelPrefix","itemLabelSuffix","badgeLabelPrefix","badgeLabelSuffix"]);this.inherited(arguments);this._defaultResources=n.getResources("idx/widget/NavTree",this.lang)},_resetResources:function(){this._updateItemLabels();this._updateBadgeLabels();this._updateBadgeIconLabels()},_updateItemLabels:function(){},_updateBadgeLabels:function(){},_updateBadgeIconLabels:function(){},_resourceLookup:function(a){var b=null;this.resources&&(b=this.resources[a]);b||(b=this._defaultResources[a]);
return b},_getItemLabelKeyPrefix:function(){if(this.itemLabelKeyPrefix)return this.itemLabelKeyPrefix;var a=this._resourceLookup("itemLabelKeyPrefix");return a?a:"navitem_"},_getItemLabelKeySuffix:function(){if(this.itemLabelKeySuffix)return this.itemLabelKeySuffix;var a=this._resourceLookup("itemLabelKeySuffix");return a?a:"_label"},_getBadgeLabelKeyPrefix:function(){if(this.badgeLabelKeyPrefix)return this.badgeLabelKeyPrefix;var a=this._resourceLookup("badgeLabelKeyPrefix");return a?a:"badge_"},
_getBadgeLabelKeySuffix:function(){if(this.badgeLabelKeySuffix)return this.badgeLabelKeySuffix;var a=this._resourceLookup("badgeLabelKeySuffix");return a?a:"_label"},getLabel:function(a){var b=this.inherited(arguments);if(!this.lookupItemLabels)return b;var d=this._getItemLabelKeyPrefix(),c=this._getItemLabelKeySuffix(),d=this._resourceLookup(d+b+c);return!d?b:d},getBadgeLabel:function(a){var b=this.model.getBadge(a);if(!b||!b.label&&!b.iconType)return"";a=null;if(b.label){if("number"==h.typeOfObject(b.label))return""+
b.label;a=""+b.label}else a=""+b.iconType;if(!this.lookupBadgeLabels)return a;var b=this._getBadgeLabelKeyPrefix(),d=this._getBadgeLabelKeySuffix(),b=this._resourceLookup(b+a+d);return!b?a:b},getIconClass:function(a,b){if(!a)return this.idxBaseClass+"HiddenIcon";var d=this.model.getItemType(a);if(!d)return this.inherited(arguments);if(this.iconMap&&d in this.iconMap){var c=this.iconMap[d];if(!c)return this.idxBaseClass+"NoIcon";if("string"==h.typeOfObject(c))return c;var d=c.leaf?c.leaf:"",e=c.open?
c.open:c.branch?c.branch:"",c=c.closed?c.closed:c.branch?c.branch:"";return!a||this.model.mayHaveChildren(a)?b?e:c:d}return this.inherited(arguments)},getBadgeIconClass:function(a,b){if(!a)return null;var d=this.model.getBadge(a);if(!d||!d.iconType||!this.badgeIconMap||!this.badgeIconMap[d.iconType])return null;var c=this.badgeIconMap[d.iconType];if("string"==h.typeOfObject(c))return c;var d=c.leaf?c.leaf:"",e=c.open?c.open:c.branch?c.branch:"",c=c.closed?c.closed:c.branch?c.branch:"";return!a||this.model.mayHaveChildren(a)?
b?e:c:d},_createTreeNode:function(a){a.badgeLabel=this.getBadgeLabel(a.item);return new l(a)},_onBadgesChanged:function(){for(var a in this._itemNodesMap){var b=this._itemNodesMap[a];if(b&&0<b.length)for(var d=this.getBadgeLabel(b[0].get("item")),c=0;c<b.length;c++){var e=b[c];e.set("badgeLabel",d);e._updateItemClasses(e.item)}}},_onSelectabilityChanged:function(){var a=this.dndController.getSelectedTreeNodes();if(a&&0!=a.length){for(var b=!1,d=0;d<a.length;d++){var c=a[d];this.model.isSelectable(c.get("item"))||
(this.dndController.removeTreeNode(c),b=!0)}b&&this._onSelectionChanged()}},_onItemChange:function(a){this.inherited(arguments);var b=this._itemNodesMap[this.model.getIdentity(a)],d=this.model.isSelectable(a),c=!1;if(b)for(var e=this.getBadgeLabel(a),f=0;f<b.length;f++){var g=b[f];g.set("badgeLabel",e);!d&&this.dndController.isTreeNodeSelected(g)&&(this.dndController.removeTreeNode(g),c=!0)}c&&this._onSelectionChanged()},_store2model:function(){this._v10Compat=!0;m.deprecated("Tree: from version 2.0, should specify a model object rather than a store/query");
var a={id:this.id+"_NavTreeModel",store:this.store,query:this.query,childrenAttrs:this.childrenAttr};if(this.params.mayHaveChildren)a.mayHaveChildren=g.hitch(this,"mayHaveChildren");if(this.params.getItemChildren)a.getChildren=g.hitch(this,function(a,d,c){this.getItemChildren(this._v10Compat&&a===this.model.root?null:a,d,c)});this.model=new o(a);this.showRoot=Boolean(this.label)},onClick:function(a,b,d){a&&(this.model.isSelectable(a)?this._onSelectionChanged(d):b.isExpandable&&this._onExpandoClick({node:b}))},
_onSelectionChanged:function(){var a=this.dndController.getSelectedTreeNodes(),b=[];a||(a=[]);for(var d=0;d<a.length;d++){var c=a[d].get("item");b.push(c)}this.onSelectionChanged(b,a,this)},onSelectionChanged:function(){},normalizeItem:function(a){return this.model.normalizeItem(a)}});f._NavTreeNode=l;return f});